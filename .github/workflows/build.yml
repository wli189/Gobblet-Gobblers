name: C++ Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y g++

    - name: Build Release (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p build/release
        g++ -o build/release/Gobblet-Gobblers src/*.cpp -O3
      shell: bash

    - name: Build Release (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p build/release
        g++ -o build/release/Gobblet-Gobblers.exe src/*.cpp -O3
      shell: pwsh

    - name: Upload Release Binaries (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Gobblet-Gobblers-linux
        path: build/release/Gobblet-Gobblers

    - name: Upload Release Binaries (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Gobblet-Gobblers-windows
        path: build/release/Gobblet-Gobblers.exe

    - name: Get latest tag
      id: get_latest_tag
      run: |
        $TAG = git describe --tags --abbrev=0 2>$null
        if (-not $TAG) {
          $TAG = "0.0.0"
        }
        Write-Host "Latest tag: $TAG"
        echo "tag=$TAG" >> $GITHUB_ENV
      shell: pwsh

    - name: Increment version
      id: increment_version
      run: |
        IFS='.' read -r -a parts <<< "${{ env.tag }}"
        if [ "${parts[0]}" == "0" ] && [ "${parts[1]}" == "0" ]; then
          NEW_VERSION="1.0.0"
        else
          parts[2]=$((parts[2]+1)) # Increment patch version
          NEW_VERSION="${parts[0]}.${parts[1]}.${parts[2]}"
        fi
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.new_version }}  # Changed 'tag' to 'tag_name'
        name: Release ${{ env.new_version }}
        body: |
          Changes made in this release:
          - Built binaries for both Linux and Windows.
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}

    - name: Upload Release Artifacts
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.new_version }}  # Changed 'tag' to 'tag_name'
      env:
        GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
