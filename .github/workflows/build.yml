name: C++ Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y g++

    - name: Build Release (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p build/release
        g++ -o build/release/Gobblet-Gobblers src/*.cpp -O3
      shell: bash

    - name: Build Release (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p build/release
        g++ -o build/release/Gobblet-Gobblers.exe src/*.cpp -O3
      shell: pwsh

    - name: Upload Release Binaries (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Gobblet-Gobblers-linux
        path: build/release/Gobblet-Gobblers

    - name: Upload Release Binaries (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: Gobblet-Gobblers-windows
        path: build/release/Gobblet-Gobblers.exe

    - name: Read Current Version
      id: read_version
      run: |
        VERSION=$(cat VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag: v${{ env.VERSION }}  # Ensure the tag is set correctly
        files: |
          build/release/Gobblet-Gobblers
          build/release/Gobblet-Gobblers.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Increment Version
      run: |
        IFS='.' read -r major minor build <<< "${{ env.VERSION }}"
        new_build=$((build + 1))
        new_version="${major}.${minor}.${new_build}"
        echo "${new_version}" > VERSION
        echo "New version: ${new_version}"
