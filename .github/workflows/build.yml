name: C++ Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y g++

    - name: Build Release (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p build/release
        g++ -o build/release/Gobblet-Gobblers src/*.cpp -O3
      shell: bash

    - name: Build Release (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p build/release
        g++ -o build/release/Gobblet-Gobblers.exe src/*.cpp -O3
      shell: pwsh

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag: ${{ github.ref }}  # Use the current tag or branch
        name: Gobblet-Gobblers Release
        body: |
          Release of Gobblet-Gobblers binaries for Linux and Windows.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Binaries (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: softprops/action-gh-release@v1
      with:
        tag: ${{ github.ref }}  # Ensure this matches the release created above
        files: build/release/Gobblet-Gobblers
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Binaries (Windows)
      if: matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v1
      with:
        tag: ${{ github.ref }}  # Ensure this matches the release created above
        files: build/release/Gobblet-Gobblers.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
